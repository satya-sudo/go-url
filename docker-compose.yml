version: "3.9"

services:
  # -----------------------
  # Database
  # -----------------------
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  # -----------------------
  # Redis
  # -----------------------
  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  auth:
    build: ./auth
    env_file: .env.example
    depends_on:
      - db
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"

  crudservice:
    build: ./crudService
    env_file: .env.example
    depends_on:
      - db
    ports:
      - "${CRUD_PORT}:${CRUD_PORT}"

  redirectservice:
    build: ./redirectService
    env_file: .env.example
    depends_on:
      - db
      - redis
    ports:
      - "${REDIRECT_PORT}:${REDIRECT_PORT}"

  jobrunner:
    build: ./jobRunner
    env_file: .env.example
    depends_on:
      - db
      - redis

  gateway:
    build: ./gateway
    env_file: .env.example
    depends_on:
      - auth
      - crudservice
      - redirectservice
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"

  frontend:
    build: ./frontend
    ports:
      - "3000:80"   # host:container (browser opens at http://localhost:3000)
    depends_on:
      - gateway
volumes:
  db_data:
  redis_data:
